name: CI & CD

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main
  workflow_dispatch:

jobs:
  lint-and-unit:
    name: ðŸ§¹ Lint & Unit via Docker Compose
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build tox & Postgres test containers
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            build tox db_test

      - name: Start Postgres for unit tests
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            up -d db_test

      - name: Wait for Postgres to be healthy
        run: |
          for i in $(seq 1 12); do
            if docker-compose \
                 -f docker-compose.yml \
                 -f docker-compose.test.yml \
                 exec -T db_test pg_isready -U postgres; then
              echo "Postgres is ready"; exit 0
            fi
            echo "Waiting for Postgresâ€¦ ($i/12)"
            sleep 5
          done
          echo "Postgres never came up!" >&2
          exit 1

      - name: Lint (tox -e lint)
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            run --rm tox tox -e lint

      - name: Unit tests (tox -e unit)
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            run --rm tox tox -e unit

      - name: Clean up
        if: always()
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            down --remove-orphans

  e2e-tests:
    name: ðŸš¥ End-to-End Tests
    runs-on: ubuntu-latest
    needs: lint-and-unit
    services:
      selenium:
        image: selenium/standalone-chrome:117.0
        ports:
          - 4444:4444
        options: >-
          --health-cmd="curl --silent --fail http://localhost:4444/wd/hub/status"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build & start test stack
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            build web db_test selenium tox
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            up -d web db_test selenium tox

      - name: Wait for Flask to be healthy
        run: |
          for i in $(seq 1 10); do
            if curl --silent --fail http://localhost:5000/; then
              echo "Flask is up"; exit 0
            fi
            echo "Waiting for Flaskâ€¦ ($i)"
            sleep 5
          done
          echo "Flask never came up!" >&2
          exit 1

      - name: Run E2E suite
        run: tox -e e2e

      - name: Tear down E2E stack
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            down --remove-orphans

  publish:
    name: ðŸš€ Build & Push Docker Image
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Build & push web image
        run: |
          docker build -f Dockerfile.web \
            -t ${{ secrets.REGISTRY_URL }}/quorum:latest .
          docker push ${{ secrets.REGISTRY_URL }}/quorum:latest
