name: CI & CD

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main
  workflow_dispatch:

jobs:
  lint-and-unit:
    name: ðŸ§¹ Lint & Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache pip deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/base.txt','requirements/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/base.txt -r requirements/dev.txt

      - name: Lint & type-check (isort, black, flake8, mypy)
        run: tox -e lint

      - name: Run unit tests
        run: tox -e unit

  e2e-tests:
    name: ðŸš¥ End-to-End Tests
    runs-on: ubuntu-latest
    needs: lint-and-unit

    services:
      selenium:
        image: selenium/standalone-chrome:117.0
        ports:
          - 4444:4444
        options: >-
          --health-cmd="curl --silent --fail http://localhost:4444/wd/hub/status"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build & start test stack
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.test.yml build web db db_test selenium
          docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d web db db_test selenium

      - name: Wait for Flask to be healthy
        run: |
          for i in $(seq 1 10); do
            if curl --silent --fail http://localhost:5000/; then
              echo "Flask is up"; exit 0
            fi
            echo "Waiting for Flaskâ€¦ ($i)"
            sleep 5
          done
          echo "Flask never came up!" >&2
          exit 1

      - name: Run E2E suite
        run: pytest tests/e2e

      - name: Teardown
        run: docker-compose -f docker-compose.yml -f docker-compose.test.yml down

  publish:
    name: ðŸš€ Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Build & push web image
        run: |
          docker build -f Dockerfile.web -t ${{ secrets.REGISTRY_URL }}/quorum:latest .
          docker push ${{ secrets.REGISTRY_URL }}/quorum:latest
