name: CI & CD

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
  workflow_dispatch:

jobs:
  lint:
    name: ðŸ§¹ Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dev dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Run lint session
        run: nox -s lint

  unit-tests:
    name: ðŸš¦ Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    #env:
    #  TESTCONTAINERS_HOST_OVERRIDE: "localhost"
    steps:
      - uses: actions/checkout@v3
    
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dev dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Run unit session
        run: nox -s unit

  e2e-tests:
    name: ðŸŽ¢ End-to-End Tests via Nox
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Run E2E suite via nox
        # ensure Docker daemon is ready
        run: |
          # wait a few seconds for dind to spin up
          sleep 10
          nox -s e2e

  publish:
    name: ðŸš€ Build & Push Docker Image
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: |
          echo ${{ secrets.REGISTRY_PASSWORD }} | docker login docker.io \
            --username ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Build image
        run: |
          docker build -f Dockerfile.web \
            -t docker.io/${{ secrets.REGISTRY_USERNAME }}/quorum:latest .

      - name: Push image
        run: |
          docker push docker.io/${{ secrets.REGISTRY_USERNAME }}/quorum:latest
